user www-data;
worker_processes auto;
# include /etc/nginx/modules-enabled/*.conf;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    # cashing dynamic content
    # proxy_cache_path /tmp/nginx/cache levels=1:2 keys_zone=my_cache:10m max_size=1g inactive=60m use_temp_path=off;
   
    upstream backend {
        server backend:8000;
    }
    # server {
    #     # Listen HTTP
    #     listen 80;
    #     server_name localhost 127.0.0.1;

    #     return 302 https://$server_name$request_uri;
    #     # return 301 https://$server_name$request_uri;
    # }
    server {
        listen 443 ssl;
        listen [::]:443 ssl;

        server_name localhost 127.0.0.1;

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_certificate /etc/nginx/ssl/cert.crt;
        ssl_certificate_key /etc/nginx/ssl/private.key;

        location / {
            proxy_headers_hash_max_size 4096;
            proxy_headers_hash_bucket_size 128;
            # proxy_cache my_cache;
            proxy_pass http://backend;
            proxy_redirect default;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-Proto https; # check for https
            # in a url, the "http://"(or "https://") is called the scheme.
            # We use the scheme in entries for CSRF_TRUSTED_ORIGINS, not for entries in ALLOWED_HOSTS.
            proxy_set_header X-Forwarded-Proto $scheme; 
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location /static/ {
            autoindex on;
            root /app/;
            # expires max;
            # add_header Cache-Control "public";
            types { 
                text/css css;
                text/javascript js;
                image/png png;
            }
        }
    }
}