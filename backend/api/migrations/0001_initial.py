# Generated by Django 5.0.3 on 2024-07-16 19:38

import api.models.playerModel
import api.models.twoFactorAuthentication
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Player',
            fields=[
                ('is_42_user', models.BooleanField(default=False)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('username', models.CharField(max_length=24, unique=True)),
                ('email', models.EmailField(max_length=60, unique=True, verbose_name='email')),
                ('password', models.CharField(max_length=250)),
                ('avatar', models.CharField(blank=True, default=api.models.playerModel.getDefaultAvatar, max_length=255, null=True)),
                ('friend_count', models.IntegerField(default=0)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('tfaActive', models.BooleanField(default=False)),
                ('elo', models.IntegerField(default=0)),
                ('victories', models.PositiveIntegerField(default=0)),
                ('defeats', models.PositiveIntegerField(default=0)),
                ('games_played', models.PositiveIntegerField(default=0)),
                ('tournaments_won', models.PositiveIntegerField(default=0)),
                ('score', models.PositiveIntegerField(default=0)),
                ('status_profile', models.IntegerField(choices=[(0, 'Offline'), (1, 'Online'), (2, 'Playing')], default=0)),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='date joined')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('friends', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FriendRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('status_request', models.CharField(choices=[(-1, 'No Request Sent'), (0, 'Them Sent to You'), (1, 'You sent to them'), (2, 'Accepted'), (3, 'Rejected')], default=-1, max_length=10)),
                ('receiver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='receiver', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sender', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('score_player1', models.PositiveIntegerField(default=0)),
                ('score_player2', models.PositiveIntegerField(default=0)),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('start_time', models.DateTimeField(auto_now=True)),
                ('end_time', models.DateTimeField(auto_now=True)),
                ('tournament', models.BooleanField(default=False, editable=False)),
                ('status', models.CharField(choices=[('WAITPLAYERS', 'Wait_players'), ('GAMELAUNCH', 'game_launch'), ('INGAME', 'ingame'), ('FINISH', 'finish')], default='WAITPLAYERS', max_length=20)),
                ('player1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='player1', to=settings.AUTH_USER_MODEL)),
                ('player2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='player2', to=settings.AUTH_USER_MODEL)),
                ('winner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='winner', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('message', models.CharField(max_length=100)),
                ('read', models.BooleanField(default=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recipient_notif', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sender_notif', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='playerTournament',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(default='=-= ERROR NAME =-=', max_length=24)),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='date joined')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Tournament',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=24)),
                ('numberOfPlayer', models.PositiveIntegerField(default=2)),
                ('numberOfPlayerNow', models.PositiveIntegerField(default=0)),
                ('winner', models.CharField(max_length=100)),
                ('password', models.CharField(max_length=100, null=True)),
                ('timeBetweenMatches', models.PositiveIntegerField(default=3)),
                ('status', models.IntegerField(choices=[(0, 'WaitingPLayers'), (1, 'InProgress'), (2, 'End')], default=0)),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='date joined')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('admin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('tournament_players', models.ManyToManyField(related_name='tournament_players', through='api.playerTournament', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='playertournament',
            name='Tournament',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.tournament'),
        ),
        migrations.CreateModel(
            name='tournamentMatch',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('level', models.PositiveIntegerField(default=2)),
                ('duel', models.PositiveIntegerField(default=2)),
                ('date_create', models.DateTimeField(auto_now_add=True)),
                ('date_max', models.DateTimeField()),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.match')),
                ('player1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matches_as_player1', to=settings.AUTH_USER_MODEL)),
                ('player2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matches_as_player2', to=settings.AUTH_USER_MODEL)),
                ('tournament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.tournament')),
            ],
        ),
        migrations.CreateModel(
            name='TwoFactorAuthentication',
            fields=[
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('code', models.IntegerField(default=api.models.twoFactorAuthentication.random_code, null=True)),
                ('sended_at', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('DEFAULT', 'Default'), ('PENDING', 'Pending'), ('SENT', 'Sent'), ('COMPLETED', 'Completed'), ('FAILED', 'Failed')], default='DEFAULT', max_length=60)),
                ('player', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            bases=(models.Model, api.models.twoFactorAuthentication.SendEmail),
        ),
    ]
